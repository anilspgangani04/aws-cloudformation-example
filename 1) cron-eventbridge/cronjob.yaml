AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation template for CRON or CRONJOB setup on AWS
Resources:

  # lambda service role which allow services to be executed from lambda it self
  lambdaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # lambda function
  CronLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          exports.handler = async (event, context) => {
            console.log("Every minute cronjob executed successfully!")
          };
      Description: Sample lambda function calling from eventbridge event/cloudwatch event
      Handler: index.handler
      Role: !GetAtt lambdaServiceRole.Arn
      MemorySize: 256
      Runtime: nodejs16.x
      Timeout: 10

  # main cron job which will be placed in AWS EventBridge Event/ CloudWatch events
  # This rule will be trigger lambda function every minute
  CronScheduleEveryMin:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(* * * * ? *) # this can modify and change based on requirement
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - CronLambdaFunction
          - Arn
        Id: CronScheduleEveryMin
  CronScheduleEveryMinPermissionProd:
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref CronLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt CronScheduleEveryMin.Arn